name: Release

on:
  push:
    tags:
      - 'v*'

jobs:

  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      release-upload-url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ github.ref }}
          tag_name: ${{ github.ref }}
          # body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

  package-and-publish-helm-chart:
    needs: release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      browser_download_url: ${{ steps.upload-chart.outputs.browser_download_url }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: install helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: package helm chart
        run: |
          helm package -u ./chart

      - name: install yq
        run: |
          VERSION=v4.34.1
          BINARY=yq_linux_amd64
          curl -Lo yq https://github.com/mikefarah/yq/releases/download/$VERSION/$BINARY && chmod +x yq

      - name: get helm chart name and version
        run: |
          CHART_NAME=$(helm show chart ./chart | ./yq .name)
          CHART_VERSION=$(helm show chart ./chart | ./yq .version)
          echo "CHART_NAME=$CHART_NAME" >> $GITHUB_ENV
          echo "CHART_VERSION=$CHART_VERSION" >> $GITHUB_ENV

      - name: upload chart to release artifacts
        uses: actions/upload-release-asset@v1
        id: upload-chart
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.release.outputs.release-upload-url }}
          asset_path: ./${{ env.CHART_NAME }}-${{ env.CHART_VERSION }}.tgz
          asset_name: ${{ env.CHART_NAME }}-${{ env.CHART_VERSION }}.tgz
          asset_content_type: application/x-tar

  pr-for-helm-index-update:
    needs: package-and-publish-helm-chart
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: main
      - name: generate helm index
        run: |
          GH_PAGES_FOLDER=pages
          echo "GH_PAGES_FOLDER=$GH_PAGES_FOLDER" >> $GITHUB_ENV
          cd $GH_PAGES_FOLDER
          curl -LO "$DOWNLOAD_URL"
          helm repo index . --url $DOWNLOAD_URL --merge index.yaml
          cd $(git rev-parse --show-toplevel)
        env:
          DOWNLOAD_URL: ${{ needs.package-and-publish-helm-chart.outputs.browser_download_url }}

      - name: commit to temporary branch
        run: |
          INDEX=$GH_PAGES_FOLDER/index.yaml
          HASH=$(echo "$GITHUB_SHA" | head -c 5)
          BRANCH_NAME=helm-index-update-"$HASH"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          git config --global user.email "github@action.com"                                                                                                                                                       ‚îÇ
          git config --global user.name "Release Action"
          git checkout -b "$BRANCH_NAME"
          git add "$INDEX" && git commit $INDEX -m "Updating index.yaml for new release"
          git push origin "$BRANCH_NAME"
        env:
          GITHUB_SHA: ${{ github.sha }}

      - name: create pull request
        run: gh pr create -B main -H "$BRANCH_NAME" --title "Merge $BRANCH_NAME into main" --body 'Created by Github release action'
        env:
          GITHUB_TOKEN: ${{ github.token }}

  containerize-the-thing:
    name: üêã
    strategy:
      matrix:
        include:
          - { stage: docker, os: linux }
    runs-on: ${{ vars.CARBIDE_RUNNER_LINUX }}
    steps:
      - # https://github.com/actions/checkout
        uses: actions/checkout@v4
        with: {fetch-depth: 0}
      - # https://github.com/rancher-government-carbide/ssf-actions/blob/main/docker-build
        id: docker
        uses: rancher-government-carbide/ssf-actions/docker-base-build@main
        with:
          image-tag: ghcr.io/${{ github.repository_owner }}/ssf/releasebot:${{ github.ref_name }}
          image-path: ${{ github.repository_owner }}/ssf/releasebot
          image-title: releasebot
          build-context: .
          build-file: ./Containerfile
          build-platforms: |
            ${{ matrix.os }}/amd64
    outputs:
      image-url: ghcr.io/${{ github.repository_owner }}/ssf/releasebot
      image-tag: ${{ github.ref_name }}